{
	"info": {
		"_postman_id": "32609139-aa71-44f9-991b-8b2d2b9f4101",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37267094",
		"_collection_link": "https://batch-27.postman.co/workspace/Training-Projects~b5f33b98-cc89-4e6a-a397-60fcb148b232/collection/37267094-32609139-aa71-44f9-991b-8b2d2b9f4101?action=share&source=collection_link&creator=37267094"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"//console.log(jsonData); // Check the entire response object\r",
							"pm.environment.set(\"id\", jsonData.bookingid);\r",
							"//console.log(pm.environment.get(\"id\")); // Verify the environment variable value\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstname\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastname\", lastName)\r",
							"\r",
							"var price = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(price)\r",
							"pm.environment.set(\"totalprice\", price )\r",
							"\r",
							"var payment = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(payment)\r",
							"pm.environment.set(\"depositpaid\", payment)\r",
							"\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"var checkin = today.add(10, 'd').add(3, 'M').format(\"YYYY-MM-DD\");\r",
							"console.log(checkin)\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"\r",
							"var checkout = today.add(15, 'd').add(3, 'M').format(\"YYYY-MM-DD\");\r",
							"console.log(checkout)\r",
							"pm.environment.set(\"checkout\", checkout)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{firstname}}\",\r\n    \"lastname\" : \"{{lastname}}\",\r\n    \"totalprice\" : \"{{totalprice}}\",\r\n    \"depositpaid\" : \"{{payment}}\",\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{checkin}}\",\r\n        \"checkout\" : \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{main_url}}/booking/",
					"host": [
						"{{main_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get booking info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if the status code is 200\r",
							"pm.test(\"Test Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"// Test to validate the first name\r",
							"pm.test(\"First name validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"firstname\")).to.eql(jsonData.firstname);\r",
							"});\r",
							"\r",
							"// Test to validate the last name\r",
							"pm.test(\"Lastname validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"lastname\")).to.eql(jsonData.lastname);\r",
							"});\r",
							"\r",
							"// Test to validate the price\r",
							"pm.test(\"Price validation\", function () {\r",
							"    pm.expect(parseInt(pm.environment.get(\"totalprice\"))).to.eql(jsonData.totalprice);\r",
							"});\r",
							"\r",
							"// Test to validate if the deposit was paid\r",
							"pm.test(\"Deposit payment validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"depositpaid\")).to.eql(jsonData.depositpaid.toString());\r",
							"});\r",
							"\r",
							"// Test to validate the check-in time\r",
							"pm.test(\"Check-in time validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin);\r",
							"});\r",
							"\r",
							"// Test to validate the check-out time\r",
							"pm.test(\"Check-out time validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{main_url}}/booking/{{id}}",
					"host": [
						"{{main_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"updated_firstname\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"updated_lastname\", lastName)\r",
							"\r",
							"var price = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(price)\r",
							"pm.environment.set(\"updated_totalprice\", price )\r",
							"\r",
							"var payment = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(payment)\r",
							"pm.environment.set(\"updated_depositpaid\", payment)\r",
							"\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"var checkin = today.add(10, 'd').add(3, 'M').format(\"YYYY-MM-DD\");\r",
							"console.log(checkin)\r",
							"pm.environment.set(\"updated_checkin\", checkin)\r",
							"\r",
							"var checkout = today.add(15, 'd').add(3, 'M').format(\"YYYY-MM-DD\");\r",
							"console.log(checkout)\r",
							"pm.environment.set(\"updated_checkout\", checkout)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{firstname}}\",\r\n    \"lastname\" : \"{{lastname}}\",\r\n    \"totalprice\" : \"{{totalprice}}\",\r\n    \"depositpaid\" : \"{{payment}}\",\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{checkin}}\",\r\n        \"checkout\" : \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{main_url}}/booking/{{id}}",
					"host": [
						"{{main_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "varify updated info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"firstname validation \", function () {\r",
							"    pm.expect(pm.variables.get(\"firstname\")).to.eql(jsonData.firstname);\r",
							"});\r",
							"\r",
							"pm.test(\"lastname validation \", function () {\r",
							"    pm.expect(pm.variables.get(\"lastname\")).to.eql(jsonData.lastname);\r",
							"});\r",
							"\r",
							"pm.test(\"totalprice validation \", function () {\r",
							"    pm.expect(pm.variables.get(\"totalprice\")).to.eql(jsonData.totalprice.toString());\r",
							"});\r",
							"\r",
							"// Test to validate if the deposit was paid\r",
							"pm.test(\"Deposit payment validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"depositpaid\")).to.eql(jsonData.depositpaid.toString());\r",
							"});\r",
							"\r",
							"// Test to validate the check-in time\r",
							"pm.test(\"Check-in time validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin);\r",
							"});\r",
							"\r",
							"// Test to validate the check-out time\r",
							"pm.test(\"Check-out time validation\", function () {\r",
							"    pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{main_url}}/booking/{{id}}",
					"host": [
						"{{main_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token=4686dd3198c44c6",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{main_url}}/booking/{{id}}",
					"host": [
						"{{main_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "authentication token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\", data.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{main_url}}/auth",
					"host": [
						"{{main_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "heroku_app",
			"value": "https://restful-booker.herokuapp.com"
		}
	]
}